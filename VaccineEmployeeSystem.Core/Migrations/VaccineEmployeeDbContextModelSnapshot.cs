// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VaccineEmployeeSystem.Core.Infra.Data.Context;

namespace VaccineEmployeeSystem.Core.Migrations
{
    [DbContext(typeof(VaccineEmployeeDbContext))]
    partial class VaccineEmployeeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VaccineEmployeeSystem.Core.Domain.Models.Employees.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("VaccineEmployeeSystem.Core.Domain.Models.Employees.EmployeeVaccination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FirstDoseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SecondDoseDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("VaccinationType")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("EmployeeVaccinations");
                });

            modelBuilder.Entity("VaccineEmployeeSystem.Core.Domain.Models.Employees.EmployeeVaccination", b =>
                {
                    b.HasOne("VaccineEmployeeSystem.Core.Domain.Models.Employees.Employee", "Employee")
                        .WithOne("Vaccination")
                        .HasForeignKey("VaccineEmployeeSystem.Core.Domain.Models.Employees.EmployeeVaccination", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("VaccineEmployeeSystem.Core.Domain.Models.Employees.Employee", b =>
                {
                    b.Navigation("Vaccination");
                });
#pragma warning restore 612, 618
        }
    }
}
